/* Wird CSS mit einem Stern selektriert, wird der Style auf alle HTML-Elemente angewendet */
* {
  /* box-sizing: border-box
    
    tatsächliche Größe inklusive Ränder,etc 
    "Wenn Sie die Breite eines Elements auf 100 Pixel festlegen, werden diese 100 Pixel alle von Ihnen hinzugefügten Ränder oder Füllungen enthalten, und das Inhaltsfeld wird verkleinert, um diese zusätzliche Breite zu absorbieren. Dadurch wird die Größenanpassung von Elementen normalerweise viel einfacher." 
    *** Link: https://developer.mozilla.org/de/docs/Web/CSS/box-sizing ***
    */
  box-sizing: border-box;

  /* Ich setze gerne für alle Elemente padding und margin auf 0, weil ich Abstände selbst definieren will.
    - Margin: Wird zum Positionieren von Elemente genutzt und ist der Abstand nach außen.
        - Styles wie eine Hintergrundfarbe wird hier nicht angewendet, weil der Abstand außerhalb vom Element liegt.
    - Padding: Das ist der Abstand innerhalb vom Element, der Zwischenraum vom Inhalt und der Elementgrenze.
        - Damit kann man z. B. einen Button vergrößern, die Hintergrundfarbe wird auch im Padding verwendet.

    *** Link: https://www.mediaevent.de/css/margin.html ***
    */
  padding: 0;
  margin: 0;
}

/* HTML-Tags können direkt per Name selektiert werden: body, div, p, etc. */
body {
  margin: 0;
  font-family: sans-serif;
  background-color: #1a1a2e;
  color: white;
  height: 100vh;
  /* Wichtig: Body füllt die gesamte Höhe */
  overflow: hidden;
  /* Verhindert Scrollbalken am Body */
}

#info-panel {
  position: fixed;
  top: 60px; /* Etwas nach unten verschoben */
  right: 40px; /* Etwas vom Rand entfernt */
  padding: 0;
  background-color: transparent; /* Kein Hintergrund */
  color: white;
  border-radius: 0;
  font-size: 16px;
  pointer-events: none;
  z-index: 1001;
  display: none; /* Standardmäßig ausblenden */
  max-width: 300px;
  line-height: 1.5;
  text-align: right; /* Text rechtsbündig */
}

#ui-container {
  position: fixed;
  top: 60px;
  left: 20px;
  z-index: 1002;
  display: flex;
  flex-direction: column;
  gap: 100px; /* Größerer Abstand zwischen den Gruppen */
  width: 220px; /* Feste Breite für den Container */
}

#group1, #group2 {
    display: flex;
    flex-direction: column;
    gap: 10px; /* Abstand innerhalb der Gruppen */
}

.btn {
  padding: 10px 20px;
  border-radius: 205px;
  cursor: pointer;
  text-align: center;
  font-family: sans-serif;
  transition: background-color 0.3s, color 0.3s;
}

.btn-primary {
  background-color: #6a6a6a;
  color: white;
  border: 1px solid white;
  font-size: 16px;
}

.btn-primary.active {
  background-color: #6a6a6a;
  /* border bleibt bestehen, keine Änderung nötig */
}

.btn-primary:hover {
  background-color: #6a6a6a;
}

.btn-secondary {
  background-color: transparent;
  color: white;
  border: 1px solid white;
  font-size: 14px;
  padding: 8px 15px;
}

.btn-secondary:hover {
  background-color: rgba(255, 255, 255, 0.1);
}

/* Entferne den speziellen Abstand, da wir jetzt Gruppen-Container haben */
#secondButton {
  margin-bottom: 0;
}

#renderer {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #1a1a2e;
  /* Dunkler Hintergrund für den Ladezustand */
  overflow-y: auto;
  /* Standardmäßig Scrolling erlauben, wird bei Bedarf in JS geändert */
  z-index: 1;
  /* Unter der UI */
  transition: opacity 0.3s ease-in-out; /* NEU: Übergang für das Fading */
}

.line {
  position: absolute;
  background-color: #FF0000; /* Farbe auf leuchtendes Rot gesetzt */
  transition: all 0.2s ease; /* Übergang etwas beschleunigt */
}

.line:hover {
  /* Die Höhe wird jetzt direkt in JS gesetzt, um sie dynamisch zu halten */
  background-color: #ff6347;
  /* Ändere die Farbe beim Hover (z. B. Tomatenrot) */
  cursor: pointer;
  /* Zeige einen Zeiger-Cursor an */
}

.tooltip {
  position: absolute;
  padding: 5px;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border-radius: 5px;
  font-size: 12px;
  pointer-events: none;
  /* Verhindert, dass der Tooltip die Maus blockiert */
  z-index: 1000;
  /* Tooltip immer im Vordergrund */
}

.bar {
  position: absolute;
}

.possible-bar {
  background-color: rgba(0, 0, 255, 0.5);
}

.proven-bar {
  background-color: rgba(255, 0, 0, 0.5);
}

/* Eigene Stile für die Marker-Cluster */
.marker-cluster div {
  width: 30px;
  height: 30px;
  margin-left: 5px;
  margin-top: 5px;
  color: #fff;
  text-align: center;
  border-radius: 15px;
  font: 12px "Helvetica Neue", Arial, Helvetica, sans-serif;
  line-height: 30px;
}

.killer-dot {
  position: absolute;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  /* Macht das Element zu einem perfekten Kreis */
  transition: transform 0.4s ease-in-out, left 0.8s ease-in-out, top 0.8s ease-in-out, background-color 0.8s ease-in-out, opacity 0.4s ease-in-out;
  cursor: pointer;
}

.killer-dot:hover {
  transform: scale(1.5);
  /* Vergrößert den Punkt beim Hover */
}

.continentLabel {
  position: absolute;
  color: white;
  font-size: 14px;
  font-weight: bold;
  right: 5%;
  top: 5%;
  z-index: 500;
  display: none;
}

.continentLabel.active {
  display: block;
}