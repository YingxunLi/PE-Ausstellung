/* Wird CSS mit einem Stern selektriert, wird der Style auf alle HTML-Elemente angewendet */
* {
    /* box-sizing: border-box
    
    tatsächliche Größe inklusive Ränder,etc 
    "Wenn Sie die Breite eines Elements auf 100 Pixel festlegen, werden diese 100 Pixel alle von Ihnen hinzugefügten Ränder oder Füllungen enthalten, und das Inhaltsfeld wird verkleinert, um diese zusätzliche Breite zu absorbieren. Dadurch wird die Größenanpassung von Elementen normalerweise viel einfacher." 
    *** Link: https://developer.mozilla.org/de/docs/Web/CSS/box-sizing ***
    */
    box-sizing: border-box; 

    /* Ich setze gerne für alle Elemente padding und margin auf 0, weil ich Abstände selbst definieren will.
    - Margin: Wird zum Positionieren von Elemente genutzt und ist der Abstand nach außen.
        - Styles wie eine Hintergrundfarbe wird hier nicht angewendet, weil der Abstand außerhalb vom Element liegt.
    - Padding: Das ist der Abstand innerhalb vom Element, der Zwischenraum vom Inhalt und der Elementgrenze.
        - Damit kann man z. B. einen Button vergrößern, die Hintergrundfarbe wird auch im Padding verwendet.

    *** Link: https://www.mediaevent.de/css/margin.html ***
    */
    padding: 0;
    margin: 0;
}

/* HTML-Tags können direkt per Name selektiert werden: body, div, p, etc. */
body {
    background-color: rgb(0, 50, 20);
    color:white;
    font-family: 'tektur', sans-serif; /* Schriftart Tektura */
}

/* .filterContainer {
  font-family: 'tektur', sans-serif; /* Schriftart Tektura */


/* IDs können mit einer Raute selektiert werden. */
#renderer {
    position: relative;
    width: 100vw;
    height: 100vh;
    background: hsl(240, 100%, 3%);
    /* background: conic-gradient(red 0% 50%, blue 50% 75%, green 75% 100%); */

    overflow: hidden;

    /* background-color: rgba(255, 255, 255, 0.05);
    width: 800px;
    height: 800px; */

    /* Wenn in einem Container absolute Elemente stecken, muss der "parent"-Container relativ definiert sein, dann wird das Koordinatensystem vom "parent" genutzt.
    Hier hat z. B. der Renderer-Container ein margin von 5px. Somit beginnt das Balkendiagramm erst bei 5px (x- und y-Position)
    */

}


.btn {
font-family: 'tektur', sans-serif;
font-size: 10px;

}

/* #legend {
    position: absolute;
    top: 10px;
    left: 10px;
    color: white;
    font-size: 12px;
  }
  .legend-dot {
    display: inline-block;
    width: 12px;
    height: 12px;
    margin-right: 6px;
    border-radius: 50%;
  } */

  .legend {
    position: absolute;
    top: 50px;      /* statt bottom */
    left: 50%;
    transform: translateX(-50%);
    background: transparent;
    padding: 8px;
    border-radius: 8px;
    z-index: 10;
  }
  
  .legend-item {
    display: flex;
    align-items: center;
    margin-bottom: 6px;
  }
  
  .legend-color {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    margin-right: 8px;
    flex-shrink: 0;
  }
  
  .button {
    font-family: 'Tektura', sans-serif;
    font-size: 12px;
    margin: 1px;
    padding: 4px 8px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 30px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    background: transparent;
    color: #fff;
    cursor: pointer;
    transition: opacity 0.3s, color 0.3s;
  }
  
  .button.inactive {
    color: rgba(255, 255, 255, 0.211);
    cursor: default;
    pointer-events: none;
  }
  

/* .dot {
    position: absolute;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    pointer-events: auto;
  } */
  /* #switchView {
    position: absolute;
    top: 20px;
    left: 20px;
    background: rgba(255,255,255,0.15);
    padding: 10px;
    border: none;
    border-radius: 10px;
    color: white;
    font-size: 13px;
    cursor: pointer;
  } */
  
  /* .dot {
    position: absolute;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    pointer-events: auto;
    transition: background-color 0.2s ease;
  } */

  .dot {
border-radius: 50%;
    transform-origin: center center;
    /* transform: scale(0);
    opacity: 0; */
    /* transition: transform ease, opacity ease; */
  }
  
  .dot.active {
    /* transform: scale(0.5); */
    opacity: 1;
  }

  .dot.hidden {
    opacity: 0 !important;
    transform: scale(0.001) !important;
    pointer-events: none !important;
  }
  
/* .custom-slider {
    position: absolute;
    top: 10px;
    left: 10px;
    width: 200px;
    height: 20px;
    background: rgb(255, 255, 255);
    border-radius: 10px;
    cursor: pointer;
    z-index: 1000;
  } */



  

  .center-ui {
    position: absolute;
    background: black;
    border-radius: 50%;
    opacity: 0.9;
    z-index: 10;
    pointer-events: auto;
  }
  
  .info-box {
    position: absolute;
    /* top: 10px;
    left: 10px;
    padding: 6px 12px; */
    background: rgba(0, 0, 0, 0.8);
    color: rgb(214, 214, 214);
    /* font-size: 12px; */
    border: 1px solid rgba(171, 171, 171, 0.254);
    border-radius: 6px;
    z-index: 1000;
    pointer-events: none; /* verhindert, dass Maus-Events blockiert werden */
  }
  
  
  

    /* background-color: white;
    position: absolute;

    /*  border-radios gibt einem Element abgerundete Ecken.
    Diese können z. B. als Pixel oder in % angegeben werden.
    50% entspricht hier 50% von 20px an jeder Ecke.
    -> Radius von 10px bei 20x20px -> Kreis */
    /* border-radius: 50%; */


.earthDot {
    position: absolute;
    width: 5px;
    height: 5px;
    border-radius: 50%;
    background: rgb(255, 0, 0);
    opacity: 1;
    transform: translate(-50%, -50%);

    /* background-color: white;
    position: absolute;

    /*  border-radios gibt einem Element abgerundete Ecken.
    Diese können z. B. als Pixel oder in % angegeben werden.
    50% entspricht hier 50% von 20px an jeder Ecke.
    -> Radius von 10px bei 20x20px -> Kreis */
    /* border-radius: 50%; */
}

.indicator {
    position: absolute;
    border: 1px solid red;
    border-radius: 50%;
    width: 100%;
    height: 100%;
    background: transparent;
    pointer-events: auto; /* Nur die Linie reagiert */
    /* transform: translate(-50%, -50%); */

    /* background-color: white;
    position: absolute;

    /*  border-radios gibt einem Element abgerundete Ecken.
    Diese können z. B. als Pixel oder in % angegeben werden.
    50% entspricht hier 50% von 20px an jeder Ecke.
    -> Radius von 10px bei 20x20px -> Kreis */
    /* border-radius: 50%; */
}