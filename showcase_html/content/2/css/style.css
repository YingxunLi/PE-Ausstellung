/* Wird CSS mit einem Stern selektriert, wird der Style auf alle HTML-Elemente angewendet */
* {
    /* box-sizing: border-box
    
    tatsächliche Größe inklusive Ränder,etc 
    "Wenn Sie die Breite eines Elements auf 100 Pixel festlegen, werden diese 100 Pixel alle von Ihnen hinzugefügten Ränder oder Füllungen enthalten, und das Inhaltsfeld wird verkleinert, um diese zusätzliche Breite zu absorbieren. Dadurch wird die Größenanpassung von Elementen normalerweise viel einfacher." 
    *** Link: https://developer.mozilla.org/de/docs/Web/CSS/box-sizing ***
    */
    box-sizing: border-box;

    /* Ich setze gerne für alle Elemente padding und margin auf 0, weil ich Abstände selbst definieren will.
    - Margin: Wird zum Positionieren von Elemente genutzt und ist der Abstand nach außen.
        - Styles wie eine Hintergrundfarbe wird hier nicht angewendet, weil der Abstand außerhalb vom Element liegt.
    - Padding: Das ist der Abstand innerhalb vom Element, der Zwischenraum vom Inhalt und der Elementgrenze.
        - Damit kann man z. B. einen Button vergrößern, die Hintergrundfarbe wird auch im Padding verwendet.

    *** Link: https://www.mediaevent.de/css/margin.html ***
    */
    padding: 0;
    margin: 0;
}

/* HTML-Tags können direkt per Name selektiert werden: body, div, p, etc. */
body {
    background-color: rgb(26, 12, 54);
    color: rgb(230, 219, 219);
    font-family: 'Fira Sans', sans-serif;
}

html,
body {
    overflow: hidden;
    height: 100%;
    margin: 0;
    padding: 0;
}

.headline {
    text-align: left;
    font-size: 2rem;
    font-weight: bold;
    margin-top: 20px;
    margin-left: 20px;
    color: rgb(230, 219, 219);
}

#renderer {
    position: relative;
    min-height: 100vh;
    height: 100vh;
    width: 100vw;
    display: flex;
    flex-direction: column;
}

.renderer {
    position: relative;
    width: 100%;
    max-width: 100vw;
    height: 100vh;
    /* Fill the viewport height */
    max-height: 100vh;
    /* Prevent overflow */
    margin: 0 auto;
    padding: 20px;
    overflow-x: hidden;
    overflow-y: hidden;
}

.bar-chart {
    flex: 1;
    display: grid;
    grid-template-rows: repeat(5, 1fr);
    /* 5 Altersgruppen */
    grid-template-columns: 80px 1fr 1fr 1fr;
    /* Alterslabel + 3 Balkengruppen */
    width: 100vw;
    height: 100%;
    align-items: stretch;
    justify-items: stretch;
    margin: 0;
    padding-bottom: 40px;
    padding-top: 40px;
}

.row {
    display: contents;
    /* Damit die Grid-Struktur erhalten bleibt */
}

.age-label {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    color: #fff;
    font-size: 1 rem;
    min-width: 80px;
}

.bar-group {
    display: flex;
    flex-direction: column-reverse;
    align-items: center;
    justify-content: center;
    height: 100%;
    gap: 2px;
    padding-bottom: 50px;
    /* Abstand nach unten, damit die Balken nicht direkt am unteren Rand kleben */
}

.x-axis {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    position: absolute;
    bottom: 15px;
    padding: 12px 0;
    overflow: hidden;
}

.gender-labels {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    width: 100vw;
    margin: 0;
    height: 40px;
    align-items: center;
}

.gender-labels>div {
    text-align: center;
    color: #fff;
    font-size: 1rem;
}

.bar-container {
    flex: 1;
    display: flex;
    justify-content: center;
}

.bar {
    position: relative;
    pointer-events: auto;
    max-width: 100%;
    width: auto;
    height: 8px;
    border-radius: 4px;
    display: block;
    margin: 0 auto;
    filter: saturate(0.5);
    transition: filter 0.2s;
}

.bar:hover {
    filter: saturate(1) brightness(1.2);
}


/* :root {
    --level1: #0000ff;
    --level2: #2200ff;
    --level3: #4400ff;
    --level4: #6600ff;
    --level5: #8800ff;
    --level6: #aa00aa;
    --level7: #cc0077;
    --level8: #ee0044;
    --level9: #ff2200;
    --level10: #ff0000;
} */


.bubble-grid {
    display: grid;
    grid-template-columns: 80px repeat(10, 1fr);
    /* 80px für Y-Achse, 10 Spalten für Stress 1–10 */
    height: 100%;
    width: 100%;
    padding-bottom: 150px;
    padding-top: 80px;
    overflow: visible;
}

.bubble-row {
    display: contents;
}

.bubble-x-axis {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    width: 100%;
    position: absolute;
    bottom: 15px;
    padding: 12px 0;
}

.stresslevel-labels {
    display: grid;
    grid-template-columns: 90px repeat(10, 1fr);
    /* 90px Y-Achsen-Lücke + 10 Stress-Spalten */
    width: 100%;
    height: 40px;
    align-items: center;
}


.stresslevel-labels>div {
    text-align: center;
    color: white;
    font-size: 1rem;
}


.bubble-cell {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: visible;
}

.bubble {
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    filter: saturate(0.5);
    transition: filter 1s;


}

.bubble:hover {
    filter: saturate(1) brightness(1.2);

    /* filter: brightness(1.4);
    transition: filter 0.2s ease, transform 0.2s ease;
    z-index: 1; */
}

.toggleButton {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: #333;
    color: #fff;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
    font-size: 1rem;
    border-radius: 5px;
}

.chart-grid {
    display: grid;
    grid-template-columns: 80px repeat(3, 1fr);
    /* 80px für Y-Achse, 3 Spalten für Gender */
    grid-auto-rows: 80px;
    width: 100vw;
    /* Volle Breite */
    max-width: 100vw;
    align-items: center;
    background: transparent;
}

.y-label {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    color: #fff;
    font-size: 1 rem;
    min-width: 80px;
}

.x-label {
    text-align: center;
    font-weight: bold;
    position: absolute;
    color: #fff;
    padding-top: 12px;
    grid-row: 1;
    grid-column: span 1;
    bottom: 15px;
    padding: 12px 0;
}

.chart-cell {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
}

.viewButton {
    position: absolute;
    top: 35px;
    opacity: 0.5;
}

.viewButton.active {
    opacity: 1;
}

.viewButton.age {
    left: 53%;
}

.viewButton.stress {
    left: 35%;
    text-align: right;
}